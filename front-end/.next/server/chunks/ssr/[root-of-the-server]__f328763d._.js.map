{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///Users/shawn/Documents/year%204/is212%20spm/scrummy-spm-G4T6/front-end/src/lib/firebase.js"],"sourcesContent":["import { initializeApp, getApps, getApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\nimport { getFirestore } from \"firebase/firestore\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDrOBWiqfpo4sNoYsF24KvhR9kp_p3dYiU\",\n  authDomain: \"scrummy-be0d6.firebaseapp.com\",\n  projectId: \"scrummy-be0d6\",\n  storageBucket: \"scrummy-be0d6.firebasestorage.app\",\n  messagingSenderId: \"309706610278\",\n  appId: \"1:309706610278:web:d5f2c1d1644e360c5f7fa7\"\n};\n\n// Initialize only once\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const storage = getStorage(app);"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAGA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,uBAAuB;AACvB,MAAM,MAAM,CAAC,IAAA,2KAAO,IAAG,MAAM,GAAG,IAAA,iLAAa,EAAC,kBAAkB,IAAA,0KAAM;AAE/D,MAAM,OAAO,IAAA,6KAAO,EAAC;AACrB,MAAM,KAAK,IAAA,iLAAY,EAAC;AACxB,MAAM,UAAU,IAAA,kMAAU,EAAC","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/shawn/Documents/year%204/is212%20spm/scrummy-spm-G4T6/front-end/src/app/page.jsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from 'react';\nimport { Eye, EyeOff, Mail, Lock, AlertCircle, User } from 'lucide-react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, \n  sendPasswordResetEmail, updateProfile, onAuthStateChanged  } from 'firebase/auth';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport {db, auth} from '@/lib/firebase';\nimport { useRouter } from \"next/navigation\";\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [fullName, setFullName] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [authChecking, setAuthChecking] = useState(true); // Add loading state for auth check\n\n  // Check auth state on component mount\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, redirect to task landing\n        router.push(\"/projects\");\n      } else {\n        // User is signed out, stay on login page\n        setAuthChecking(false);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, [router]);\n\n  // Show loading while checking auth state\n  if (authChecking) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-200 to-gray-400 flex items-center justify-center p-4\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // Email validation function\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Name validation function\n  const validateName = (name) => {\n    // Check if name is not empty and contains at least 2 characters\n    if (!name || name.trim().length < 2) {\n      return false;\n    }\n    \n    // Check if name contains only letters, spaces, hyphens, and apostrophes\n    const nameRegex = /^[a-zA-Z\\s\\-']+$/;\n    return nameRegex.test(name.trim());\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    \n    // Validate email for both login and signup\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address.');\n      setIsLoading(false);\n      return;\n    }\n    \n    if (isSignUp) {\n      // Sign Up Logic\n      \n      // Validate full name\n      if (!validateName(fullName)) {\n        setError('Please enter a valid full name (at least 2 characters, letters only).');\n        setIsLoading(false);\n        return;\n      }\n      \n      if (password !== confirmPassword) {\n        setError('Passwords do not match.');\n        setIsLoading(false);\n        return;\n      }\n      \n      if (password.length < 6) {\n        setError('Password must be at least 6 characters long.');\n        setIsLoading(false);\n        return;\n      }\n      \n       try {\n        // 1. Create user in Firebase Auth\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n\n        // Optional: set displayName in Auth\n        await updateProfile(user, { displayName: fullName});\n\n        // 2. Add extra info to Firestore\n        await setDoc(doc(db, \"users\", user.uid), {\n          fullName,\n          email,\n          role: \"Staff\", // default role\n          createdAt: new Date(),\n        });\n\n        console.log(\"Sign up successful!\", user.uid);\n        router.push(\"/tasks\");\n        } catch (err) {\n          setError(\"Failed to create account. Please try again.\");\n          console.error(\"Sign up error:\", err);\n        }\n    } else {\n        // Login Logic\n        try {\n        // Authenticate user\n        await signInWithEmailAndPassword(auth, email, password);\n\n        // Firebase persists the user session automatically\n        console.log(\"Login successful:\", auth.currentUser);\n\n        // Redirect to dashboard\n        router.push(\"/tasks\");\n      } catch (err) {\n        setError(\"Failed to login. Check credentials.\");\n        console.error(\"Login error:\", err);\n      }\n    }\n    \n    setIsLoading(false);\n  };\n\n  const handleForgotPassword = async () => {\n    if (!email) {\n      setError('Please enter your email address first.');\n      return;\n    }\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address.');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      await sendPasswordResetEmail(auth, email);\n      console.log('Password reset email sent to:', email);\n      alert('Password reset email sent! Check your inbox.');\n    } catch (error) {\n      setError('Failed to send password reset email.');\n      console.error('Password reset error:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-200 to-gray-400 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        {/* Card Container */}\n        <div className=\"bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\">\n          {/* Header */}\n          <div className=\"px-8 pt-8 pb-6 text-center\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Lock className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Welcome to TaskFlow!</h1>\n            <p className=\"text-gray-600\">{isSignUp ? 'Create your account to get started' : 'Sign in to your account to continue'}</p>\n          </div>\n\n          {/* Form */}\n          <div className=\"px-8 pb-8 space-y-6\">\n          {/* Form */}\n          <div className=\"px-8 pb-8 space-y-6\">\n            {/* Error Message */}\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 flex items-center gap-2 text-red-700\">\n                <AlertCircle className=\"w-4 h-4 flex-shrink-0\" />\n                <span className=\"text-sm\">{error}</span>\n              </div>\n            )}\n\n            {/* Full Name Field - Only for Sign Up */}\n            {isSignUp && (\n              <div className=\"space-y-2\">\n                <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700\">\n                  Full Name\n                </label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-3 w-5 h-5 text-gray-400\" />\n                  <input\n                    id=\"fullName\"\n                    type=\"text\"\n                    value={fullName}\n                    onChange={(e) => setFullName(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors text-black placeholder-gray-500\"\n                    placeholder=\"Enter your full name\"\n                    required\n                  />\n                </div>\n              </div>\n            )}\n\n            {/* Email Field */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email Address\n              </label>\n              <div className=\"relative\">\n                <Mail className=\"absolute left-3 top-3 w-5 h-5 text-gray-400\" />\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors text-black placeholder-gray-500\"\n                  placeholder=\"Enter your email address\"\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Password Field */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-3 w-5 h-5 text-gray-400\" />\n                <input\n                  id=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors text-black placeholder-gray-500\"\n                  placeholder=\"Enter your password\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600 transition-colors\"\n                >\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n            </div>\n\n            {/* Confirm Password Field - Only for Sign Up */}\n            {isSignUp && (\n              <div className=\"space-y-2\">\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                  Confirm Password\n                </label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 w-5 h-5 text-gray-400\" />\n                  <input\n                    id=\"confirmPassword\"\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    className=\"w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors text-black placeholder-gray-500\"\n                    placeholder=\"Confirm your password\"\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute right-3 top-3 text-gray-400 hover:text-gray-600 transition-colors\"\n                  >\n                    {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {/* Forgot Password Link - Only for Login */}\n            {!isSignUp && (\n              <div className=\"flex justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={handleForgotPassword}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 transition-colors\"\n                >\n                  Forgot your password?\n                </button>\n              </div>\n            )}\n\n            {/* Submit Button */}\n            <button\n              type=\"button\"\n              onClick={handleLogin}\n              disabled={isLoading}\n              className=\"w-full bg-gradient-to-r from-blue-500 to-cyan-500 text-white py-3 rounded-lg font-medium hover:from-blue-600 hover:to-cyan-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <div className=\"flex items-center justify-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  {isSignUp ? 'Creating account...' : 'Signing in...'}\n                </div>\n              ) : (\n                isSignUp ? 'Create Account' : 'Sign In'\n              )}\n            </button>\n          </div>\n          </div>\n        </div>\n\n        {/* Sign Up/Login Toggle Link */}\n        <div className=\"text-center mt-6\">\n          <p className=\"text-gray-600\">\n            {isSignUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n            <button \n              onClick={() => {\n                setIsSignUp(!isSignUp);\n                setError('');\n                setEmail('');\n                setPassword('');\n                setConfirmPassword('');\n                setFullName('');\n              }}\n              className=\"text-blue-600 hover:text-blue-700 font-medium transition-colors\"\n            >\n              {isSignUp ? 'Sign in here' : 'Sign up here'}\n            </button>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}