name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        working-directory: ./back-end
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run backend tests with coverage
        run: |
          cd back-end
          pytest tests/ --cov=. --cov-report=xml:../coverage-backend.xml --cov-report=term -v
        continue-on-error: true

      - name: Fix backend coverage report paths
        run: |
          python3 << 'EOF'
          import xml.etree.ElementTree as ET
          import os

          tree = ET.parse('coverage-backend.xml')
          root = tree.getroot()

          # Fix source path to be relative to project root
          for source in root.findall('.//source'):
              source.text = '${{ github.workspace }}/back-end'

          # Fix filename paths to be relative to project root
          for cls in root.findall('.//class'):
              filename = cls.get('filename')
              if filename and not filename.startswith('back-end/'):
                  cls.set('filename', f'back-end/{filename}')

          tree.write('coverage-backend.xml', encoding='utf-8', xml_declaration=True)
          print("Fixed coverage paths")

          # Debug: print first few lines
          with open('coverage-backend.xml', 'r') as f:
              lines = f.readlines()[:20]
              print(''.join(lines))
          EOF

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./front-end/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./front-end
        run: npm ci

      - name: Run frontend linting
        working-directory: ./front-end
        run: npm run lint
        continue-on-error: true

      - name: Run frontend tests with coverage
        working-directory: ./front-end
        run: npm run test:coverage
        continue-on-error: true

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true
